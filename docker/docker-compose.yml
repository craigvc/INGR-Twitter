version: '3'

services:
  database:
    container_name: database
    build:
      context: ./database
    environment:
      - MYSQL_DATABASE=${DATABASE_NAME}
      - MYSQL_USER=${DATABASE_USER}
      - MYSQL_PASSWORD=${DATABASE_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database/data:/var/lib/mysql

  php-fpm:
    container_name: php
    build:
      context: ./php-fpm
    depends_on:
      - database
    environment:
      - APP_ENV=${APP_ENV}
      - APP_SECRET=${APP_SECRET}
      - JWT_PASSPHRASE=${JWT_PASSPHRASE}
      - DATABASE_URL=mysql://${DATABASE_USER}:${DATABASE_PASSWORD}@database:3306/${DATABASE_NAME}?serverVersion=5.7
    volumes:
      - ../src:/var/www

  nginx:
    container_name: server
    build:
      context: ./nginx
    volumes:
      - ../src:/var/www
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites/:/etc/nginx/sites-available
      - ./nginx/conf.d/:/etc/nginx/conf.d
      - ./logs:/var/log
    depends_on:
      - php-fpm
    ports:
      - "8080:80"
      - "443:443"

  node:
    container_name: nodejs
    build:
      context: './node'
    volumes:
      - ../client-app:/usr/src/app
    ports:
      - "3000:3000"

  # tasker:
  #   image: strm/tasker
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #   environment:
  #     configuration: |
  #       schedule:
  #         - every: minute
  #           task: hello
  #       tasks:
  #         docker:
  #           - name: hello
  #             image: debian:jessie
  #             script:
  #               - ./testScript.sh

  # tasker:
  #   image: strm/tasker
  #   volumes:
  #     - "../src:/var/www"
  #   environment:
  #     configuration: |
  #       schedule:
  #         - every: minute
  #           task: hello
  #       tasks:
  #         docker:
  #           - name: hello
  #             image: debian:jessie
  #             script:
  #               - ./testScript.sh


  # node:
  #   container_name: nodejs
  #   image: 'node'
  #   working_dir: /usr/src/app
  #   command:
  #     - /bin/sh
  #     - '-c'
  #     - 'npm install && npm start'
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ../client-app:/usr/src/app

